AWSTemplateFormatVersion: '2010-09-09'

Parameters:
  Version:
    Type: String
    Description: Git Tag of this deployment
  ServiceStage:
    Type: String
    Description: The name of the service
  RoleARN:
    Type: String
    Description: The ARN for the role to execute under
  CodeBucket:
    Type: String
    Description: Bucket this (and code) is deployed in
  CodePath:
    Type: String
    Description: Location of template files
  LogRetention:
    Type: Number
    Description: days
    Default: 7
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]
  PassthroughTimeout:
    Type: Number
    Description: seconds
    MinValue: 1
    MaxValue: 300
    Default: 30
  PassthroughMemorySize:
    Type: Number
    Description: MB
    AllowedValues: [128, 192, 256, 320, 384, 448, 512, 576, 640, 704, 768, 832, 896, 960, 1024, 1088, 1152, 1216, 1280, 1344, 1408, 1472, 1536]
    Default: 512
  CacheEnabled:
    Type: String
    Description: "Do we enable Cache"
    Default: false
  PassthroughUrl:
    Type: String
    Description: Url to passthrough
  PrimoApiKey:
    Type: String
    Description: Api Key for primo

Outputs:
  PassthroughArn:
    Value: !GetAtt PassthroughFunction.Arn
  PassthroughLogs:
    Value: !Sub https://console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#logStream:group=${PassthroughFunctionLogs}

Resources:
  PassthroughFunction:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket: !Ref CodeBucket
        S3Key: !Sub ${CodePath}/Passthrough.zip
      FunctionName: !Sub ${ServiceStage}-Passthrough
      Handler: index.handler
      Role: !Ref RoleARN
      Runtime: nodejs8.10
      Timeout: !Ref PassthroughTimeout
      MemorySize: !Ref PassthroughMemorySize
      Environment:
        Variables:
          VERSION: !Ref Version
          PASSTHROUGH_URL: !Ref PassthroughUrl
          PRIMO_API_KEY: !Ref PrimoApiKey

  PassthroughPermission:
    DependsOn: PassthroughFunction
    Type: AWS::Lambda::Permission
    Properties:
      FunctionName: !GetAtt PassthroughFunction.Arn
      Action: lambda:InvokeFunction
      Principal: apigateway.amazonaws.com

  PassthroughFunctionLogs:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/lambda/${PassthroughFunction}
      RetentionInDays: !Ref LogRetention
